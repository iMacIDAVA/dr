import 'package:flutter/material.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:sos_bebe_profil_bebe_doctor/login_screen.dart';
import 'package:sos_bebe_profil_bebe_doctor/termeni_si_conditii_screen.dart';
import 'package:sos_bebe_profil_bebe_doctor/utils/utils_widgets.dart';

import 'package:flutter_switch/flutter_switch.dart';
import 'package:sos_bebe_profil_bebe_doctor/reset_password_screen.dart';

class ProfilMedicScreen extends StatefulWidget {

  final bool isDisponibleForNotifications;

  const ProfilMedicScreen({super.key, required this.isDisponibleForNotifications});



  @override
  State<ProfilMedicScreen> createState() => _ProfilMedicScreenState();
}

class _ProfilMedicScreenState extends State<ProfilMedicScreen> {


  bool isDisponibleForNotifications = false;
  bool isVisible = false;

  @override
  initState(){

    super.initState();
    isDisponibleForNotifications = widget.isDisponibleForNotifications;
    isVisible = widget.isDisponibleForNotifications;

  }

  void callback(bool newIsVisible) {
    setState(() {
      isVisible = newIsVisible;
    });
  }





  @override
  Widget build(BuildContext context) {
    return Scaffold(
      resizeToAvoidBottomInset: true,
      backgroundColor:const Color.fromRGBO(30, 214, 158, 1),
      appBar: AppBar(
        toolbarHeight: 90,
        backgroundColor: const Color.fromRGBO(30, 214, 158, 1),
        foregroundColor: Colors.white,
        leading:
          const BackButton(
            color: Colors.white,
          ),
        title:Text('Profilul meu',
          style: GoogleFonts.rubik(color: const Color.fromRGBO(255, 255, 255, 1), fontSize: 16, fontWeight: FontWeight.w500),
        ),
        centerTitle: true,
      ),
      body:
      SingleChildScrollView(
        child: Container(
          decoration: const BoxDecoration(
            borderRadius: BorderRadius.only(
              topLeft: Radius.circular(30),
              topRight: Radius.circular(30),
            ),
            color: Colors.white,
          ),
          child:Column(
            children: [
              const SizedBox(height: 28),
              Center(
                child:IconButton(
                onPressed: () {},
                icon: Image.asset('./assets/images/daniela_preoteasa_meniu_profil.png'),
                ),
              ),
              Center(
                child:
                Text( 'Dr. Daniela Preoteasa',
                    style: GoogleFonts.rubik(color: const Color.fromRGBO(14, 190, 127, 1), fontSize: 21, fontWeight: FontWeight.w500),
                ),
              ),
              Center(
                child:
                Text( 'AIS Clinics & Hospital București',
                    style: GoogleFonts.rubik(color: const Color.fromRGBO(103, 114, 148, 1), fontSize: 12, fontWeight: FontWeight.w300),
                ),
              ),
              Center(
                child:
                Text( 'Pediatrie, Medic Primar',
                    style: GoogleFonts.rubik(color: const Color.fromRGBO(103, 114, 148, 1), fontSize: 9, fontWeight: FontWeight.w300),
                ),
              ),
              const SizedBox(height: 60),
              Padding(
                padding: const EdgeInsets.only(left:40.0, right: 40),
                child:Row(
                  mainAxisAlignment:MainAxisAlignment.start,
                  children:[
                    const Icon(Icons.email_outlined, color: Colors.blue),
                    const SizedBox(width: 30),
                    Text( 'Doctor',
                      style: GoogleFonts.rubik(color: const Color.fromRGBO(103, 114, 148, 1), fontSize: 12, fontWeight: FontWeight.w500),
                    ),
                  ],
                ),
              ),
              Padding(
                padding: const EdgeInsets.only(left:40.0, right: 40),
                child:Row(
                  mainAxisAlignment:MainAxisAlignment.start,
                  children:[
                    Text( 'User',
                      style: GoogleFonts.rubik(color: const Color.fromRGBO(205, 221, 223, 1), fontSize: 12, fontWeight: FontWeight.w500),
                    ),
                    const SizedBox(width: 30),
                    Text( '@ Dr Daniela Preoteasa',
                      style: GoogleFonts.rubik(color: const Color.fromRGBO(205, 221, 223, 1), fontSize: 12, fontWeight: FontWeight.w500),
                    ),
                  ],
                ),
              ),
              const TextNavigareLinie(textStanga:'Resetare parola', navigare: 1),
              const TextNavigareLinie(textStanga:'Dezactivare cont', navigare: 1),
              const TextNavigareLinie(textStanga:'Schimba numar de telefon', navigare: 1),
              GestureDetector(
                onTap:() {
                  Navigator.push(context, MaterialPageRoute(
                      builder: (context) {
                        return const LoginMedicScreen();
                      }
                    ),
                  );
                },
                child: Padding(
                  padding: const EdgeInsets.only(left:25.0, right: 40),
                  child:Row(
                    mainAxisAlignment:MainAxisAlignment.start,
                    children:[
                      //const Icon(Icons.logout_outlined, color: Color.fromRGBO(30, 214, 158, 1)),
                      IconButton(
                      onPressed: () {
                        Navigator.push(context, MaterialPageRoute(
                            builder: (context) {
                              return const LoginMedicScreen();
                            }
                          ),
                        );
                      },
                      icon: const Icon(Icons.power_settings_new_outlined, color: Color.fromRGBO(30, 214, 158, 1)),),
                      const SizedBox(width: 10),
                      Text( 'Deconectare',
                        style: GoogleFonts.rubik(color: const Color.fromRGBO(103, 114, 148, 1), fontSize: 12, fontWeight: FontWeight.w500),
                      ),
                    ],
                  ),
                ),
              ),
              const SizedBox(height:40),
              TextAndSwitchWidget(isToggled: isVisible, text: "Notificari", callback: callback),
              const SizedBox(height:20),
              GestureDetector(
                onTap:() {
                  Navigator.push(context, MaterialPageRoute(
                      builder: (context) {
                        return const TermeniSiConditiiScreen();
                      }
                    ),
                  );
                },
                child: Padding(
                  padding: const EdgeInsets.only(left:40.0, right: 40),
                  child:Row(
                    mainAxisAlignment:MainAxisAlignment.start,
                    children:[
                      Text( 'Termeni și condiții',
                        style: GoogleFonts.rubik(color: const Color.fromRGBO(103, 114, 148, 1), fontSize: 12, fontWeight: FontWeight.w500),
                      ),
                    ],
                  ),
                ),
              ),
              const SizedBox(height:20),
              /*
              const TexteLinie(textStanga:'User',textDreapta:'@Dr Daniela Preoteasa'),
              customPaddingProfilulMeu(),
              const TexteLinie(textStanga:'Email',textDreapta:'Doctor'),
              customPaddingProfilulMeu(),
              const IconTextCV(textLinie:'cv', iconCV: './assets/images/profil_navigare_icon.png'),
              customPaddingProfilulMeu(),
              TextAndSwitchWidget(isToggled: isVisible, text: "Notificari", callback: callback),
              const SizedBox(height: 60),
              */
              /*
              Row (
                mainAxisAlignment: MainAxisAlignment.start,
                children: [
                  const SizedBox(
                    width: 15,
                  ),
                  SizedBox(
                    width: 352,
                    child: ElevatedButton(
                      onPressed: () {
                        //Navigator.push(
                            //context,
                            //MaterialPageRoute(
                              //builder: (context) => const ServiceSelectScreen(),
                              //builder: (context) => const TestimonialScreen(),
                            //));
                      },
                      style: ElevatedButton.styleFrom(
                          backgroundColor: const Color.fromRGBO(30, 214, 158, 1),
                          minimumSize: const Size.fromHeight(50), // NEW
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(20),
                          )),
                      child: const Text('Finalizare',
                        style: TextStyle(
                          fontSize: 12,
                          fontFamily: 'SF Pro Text',
                          fontWeight: FontWeight.bold,
                          color:Color.fromRGBO(255, 255, 255, 1),
                        )
                      ),
                    ),
                  ),
                ],
              ),
              */
            ],
          ),
        ),
      ),
    );
  }
}

class TextNavigareLinie extends StatelessWidget {

  final String textStanga;
  final int navigare;

  const TextNavigareLinie({super.key, required this.textStanga, required this.navigare});

  @override
  Widget build(BuildContext context) {
    return
    Padding(
      padding: const EdgeInsets.only(left:40.0, right: 40),
      child:Row(
        mainAxisAlignment:MainAxisAlignment.spaceBetween,
        children:[
          Text( textStanga,//'Schimba numar de telefon',
            style: GoogleFonts.rubik(color: const Color.fromRGBO(103, 114, 148, 1), fontSize: 12, fontWeight: FontWeight.w500),
          ),
          const SizedBox(width: 30),
          IconButton(
            onPressed: () {
              Navigator.push(context, MaterialPageRoute(
                  builder: (context) {
                    if (navigare == 1){
                      return const ResetPasswordScreen();
                    }
                    return const SizedBox();
                  }
                ),
              );
            },
            icon: Image.asset('./assets/images/profil_navigare_icon.png'),
          ),
        ],
      ),
    );
  }
}

// ignore: must_be_immutable
class TextAndSwitchWidget extends StatefulWidget {
  bool isToggled;
  final Function(bool)? callback;
  final String text;
  TextAndSwitchWidget({super.key, required this.isToggled, required this.text, this.callback});

  @override
  State<TextAndSwitchWidget> createState() => _TextAndSwitchWidgetState();
}

class _TextAndSwitchWidgetState extends State<TextAndSwitchWidget> {
  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.only(left:40.0, right: 40),
      child:
        Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [

            //Text(widget.disease, style: GoogleFonts.rubik(fontSize: 16, fontWeight: FontWeight.w400)), old

            Text(widget.text, style: GoogleFonts.rubik(color: const Color.fromRGBO(59, 86, 110, 1), fontSize: 14, fontWeight: FontWeight.w400)),

            FlutterSwitch(
              value: widget.isToggled,
              height: 20,
              width: 40,

              //activeColor: const Color.fromARGB(255, 103, 197, 108),

              //added by George Valentin Iordache
              activeColor: const Color.fromRGBO(30, 214, 158, 1),

              inactiveColor: Colors.grey[200]!,
              onToggle: (value) {
                if (widget.callback != null) {
                  setState(() {
                    widget.callback!(value);
                  });
                } else {
                  setState(() {
                    widget.isToggled = value;
                    // ignore: avoid_print
                    print(widget.isToggled);
                  });
                }
              },
            ),
          ],
        ),
    );
  }
}

/*
class IconTextCV extends StatelessWidget {

  final String textLinie;
  final String iconCV;

  const IconTextCV({super.key, required this.textLinie, required this.iconCV});

  @override
  Widget build(BuildContext context) {
    return
    Column(
      children: [
        const SizedBox(
          height: 10,
        ),
        Row(
          mainAxisAlignment: MainAxisAlignment.start,
          children: [
            const SizedBox(width:15),
            SizedBox(
              width: 370,
              child:
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children:[
                  Text( textLinie,
                    style: const TextStyle(color: Color.fromRGBO(111, 139, 164, 1), fontSize: 14, fontWeight: FontWeight.w400),
                  ),
                  IconButton(
                    onPressed: () {},
                    icon: Image.asset(iconCV),
                  ),
                ],
              ),
            ),
          ],
        ),
        const SizedBox(
          height: 10,
        ),
      ],
    );
  }
}
*/