def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 34  // This can stay the latest for future-proofing

    namespace "com.example.sos_bebe_profil_bebe_doctor"

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.sos_bebe_profil_bebe_doctor"
        minSdkVersion 21  // Minimum SDK level, keep it to support more devices
        targetSdkVersion 30  // Set target to Android 11 API level (30) to match Android 11 compatibility
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        multiDexEnabled true  // Enable MultiDex for method limit

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_17
            targetCompatibility JavaVersion.VERSION_17

            java {
                toolchain {
                    languageVersion.set(JavaLanguageVersion.of(17))
                }
            }
        }

        kotlinOptions {
            jvmTarget = '17'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'androidx.multidex:multidex:2.0.1'  // Ensure MultiDex is enabled
    implementation 'com.stripe:stripe-android:20.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

allprojects {
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "17"
        }
    }

    tasks.withType(JavaCompile).all {
        sourceCompatibility = "17"
        targetCompatibility = "17"
    }
}
